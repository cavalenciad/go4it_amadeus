// <auto-generated />
using AmadeusAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmadeusAPI.Migrations
{
    [DbContext(typeof(AmadeusAPIDbContext))]
    [Migration("20250314214631_CreateQuestionTables")]
    partial class CreateQuestionTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmadeusAPI.Models.CityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("idioma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lugarImperdible")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombreDestino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("AmadeusAPI.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Preferencia de destino",
                            Text = "¿Qué tipo de entorno prefieres para tus vacaciones?"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Preferencia de destino",
                            Text = "¿Te gustaría explorar un destino internacional o nacional?"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Preferencia climática",
                            Text = "¿Qué clima prefieres durante tus vacaciones?"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Preferencia climática",
                            Text = "¿Te molesta la lluvia en tus vacaciones?"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Preferencia de actividad",
                            Text = "¿Qué tipo de actividades prefieres hacer durante tus vacaciones?"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Preferencia de actividad",
                            Text = "¿Te gusta disfrutar de la gastronomía local durante tus viajes?"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Preferencia de alojamiento",
                            Text = "¿Qué tipo de alojamiento prefieres?"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Preferencia de alojamiento",
                            Text = "¿Te importa si el alojamiento está en el centro de la ciudad o prefieres las afueras?"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Duración del viaje",
                            Text = "¿Cuánto tiempo planeas quedarte de vacaciones?"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Duración del viaje",
                            Text = "¿Cuántos días de actividades intensas puedes disfrutar antes de necesitar un descanso?"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Edad",
                            Text = "¿Cuál es tu rango de edad?"
                        });
                });

            modelBuilder.Entity("AmadeusAPI.Models.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            Text = "Playa"
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 1,
                            Text = "Montaña"
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 1,
                            Text = "Ciudad"
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 2,
                            Text = "Internacional"
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 2,
                            Text = "Nacional"
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 2,
                            Text = "Indiferente"
                        },
                        new
                        {
                            Id = 7,
                            QuestionId = 3,
                            Text = "Caluroso"
                        },
                        new
                        {
                            Id = 8,
                            QuestionId = 3,
                            Text = "Templado"
                        },
                        new
                        {
                            Id = 9,
                            QuestionId = 3,
                            Text = "Frío"
                        },
                        new
                        {
                            Id = 10,
                            QuestionId = 4,
                            Text = "Sí, prefiero clima seco"
                        },
                        new
                        {
                            Id = 11,
                            QuestionId = 4,
                            Text = "No me importa un poco de lluvia"
                        },
                        new
                        {
                            Id = 12,
                            QuestionId = 4,
                            Text = "Prefiero destinos con lluvias ocasionales"
                        },
                        new
                        {
                            Id = 13,
                            QuestionId = 5,
                            Text = "Deportes y aventuras"
                        },
                        new
                        {
                            Id = 14,
                            QuestionId = 5,
                            Text = "Cultura y museos"
                        },
                        new
                        {
                            Id = 15,
                            QuestionId = 5,
                            Text = "Relax y bienestar"
                        },
                        new
                        {
                            Id = 16,
                            QuestionId = 6,
                            Text = "Sí, es muy importante para mí"
                        },
                        new
                        {
                            Id = 17,
                            QuestionId = 6,
                            Text = "Me gusta probar cosas nuevas, pero no es lo principal"
                        },
                        new
                        {
                            Id = 18,
                            QuestionId = 6,
                            Text = "No, prefiero comida más familiar"
                        },
                        new
                        {
                            Id = 19,
                            QuestionId = 7,
                            Text = "Hotel de lujo"
                        },
                        new
                        {
                            Id = 20,
                            QuestionId = 7,
                            Text = "Hostal o albergue"
                        },
                        new
                        {
                            Id = 21,
                            QuestionId = 7,
                            Text = "Airbnb o apartamento"
                        },
                        new
                        {
                            Id = 22,
                            QuestionId = 8,
                            Text = "Centro de la ciudad"
                        },
                        new
                        {
                            Id = 23,
                            QuestionId = 8,
                            Text = "Afueras"
                        },
                        new
                        {
                            Id = 24,
                            QuestionId = 8,
                            Text = "Indiferente"
                        },
                        new
                        {
                            Id = 25,
                            QuestionId = 9,
                            Text = "Menos de una semana"
                        },
                        new
                        {
                            Id = 26,
                            QuestionId = 9,
                            Text = "Una a dos semanas"
                        },
                        new
                        {
                            Id = 27,
                            QuestionId = 9,
                            Text = "Más de dos semanas"
                        },
                        new
                        {
                            Id = 28,
                            QuestionId = 10,
                            Text = "1-2 días"
                        },
                        new
                        {
                            Id = 29,
                            QuestionId = 10,
                            Text = "3-5 días"
                        },
                        new
                        {
                            Id = 30,
                            QuestionId = 10,
                            Text = "Más de 5 días"
                        },
                        new
                        {
                            Id = 31,
                            QuestionId = 11,
                            Text = "Menos de 30 años"
                        },
                        new
                        {
                            Id = 32,
                            QuestionId = 11,
                            Text = "30-50 años"
                        },
                        new
                        {
                            Id = 33,
                            QuestionId = 11,
                            Text = "Más de 50 años"
                        });
                });

            modelBuilder.Entity("AmadeusAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AmadeusAPI.Models.User_answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Date")
                        .HasColumnType("integer");

                    b.Property<int>("Question_id")
                        .HasColumnType("integer");

                    b.Property<int>("Question_option_id")
                        .HasColumnType("integer");

                    b.Property<int>("User_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("User_answers");
                });

            modelBuilder.Entity("AmadeusAPI.Models.QuestionOption", b =>
                {
                    b.HasOne("AmadeusAPI.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("AmadeusAPI.Models.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
